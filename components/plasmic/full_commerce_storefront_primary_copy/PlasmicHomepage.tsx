// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7G8n9jwdE5WowDWbWsVZ26
// Component: OztB1LbBdJ00tn
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: bGODP7QmU1IFXw/component
import Button from "../../Button"; // plasmic-import: TeHqZuNjGboLlH/component
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import ProductCard from "../../ProductCard"; // plasmic-import: r4g8NclKGXHCM0/component
import Rating from "../../Rating"; // plasmic-import: YwX3tQC_9DPMnH/component
import { ProductTextField } from "@plasmicpkgs/commerce"; // plasmic-import: S1F4q0wN6b/codeComponent
import EmojiValueProps from "../../EmojiValueProps"; // plasmic-import: nVVpRgNPi4Uxtn/component
import Value from "../../Value"; // plasmic-import: 5oXT4HY_RWi9cx/component
import { CategoryCollection } from "@plasmicpkgs/commerce"; // plasmic-import: ny07p45F84c_/codeComponent
import { CategoryField } from "@plasmicpkgs/commerce"; // plasmic-import: hzqiq--xdG5T/codeComponent
import Footer from "../../Footer"; // plasmic-import: yupoJ9vNpJ7q5T/component

import { useScreenVariants as useScreenVariantswtJ2E0HlkJw0X } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wtJ2E0HLK-JW0X/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_full_commerce_storefront_primary_copy.module.css"; // plasmic-import: 7G8n9jwdE5WowDWbWsVZ26/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: OztB1LbBdJ00tn/css

import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: 16E9ppEzL5I4sF/icon
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: RRZibRgeOCwXSy/icon
import PlaneIcon from "./icons/PlasmicIcon__Plane"; // plasmic-import: VaY8aClNenDr8b/icon
import DocumentIcon from "./icons/PlasmicIcon__Document"; // plasmic-import: td5q6tXxIqh4-_/icon
import LockIcon from "./icons/PlasmicIcon__Lock"; // plasmic-import: wmiiUzjRBAQdKV/icon
import SpeakerphoneIcon from "./icons/PlasmicIcon__Speakerphone"; // plasmic-import: zno4iM4P1t805f/icon
import MedalIcon from "./icons/PlasmicIcon__Medal"; // plasmic-import: W7_4_YWSwAWjpb/icon
import LeafIcon from "./icons/PlasmicIcon__Leaf"; // plasmic-import: hKfkQmcORL6R6n/icon
import ShoeIcon from "./icons/PlasmicIcon__Shoe"; // plasmic-import: pPebTYaj2RdgSR/icon
import PeaceIcon from "./icons/PlasmicIcon__Peace"; // plasmic-import: CFKzaVz_YCSXWf/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {
  container42?: React.ReactNode;
};

type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>("container42");

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navBar?: p.Flex<typeof NavBar>;
  container3?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  container4?: p.Flex<"div">;
  container?: p.Flex<"div">;
  emojiValueProps?: p.Flex<typeof EmojiValueProps>;
  columns?: p.Flex<"div">;
  container42?: p.Flex<"div">;
  container6?: p.Flex<"div">;
  categoryCollection?: p.Flex<typeof CategoryCollection>;
  categoryField?: p.Flex<typeof CategoryField>;
  container434?: p.Flex<"div">;
  container433?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswtJ2E0HlkJw0X()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"ShoeShop"}</title>
        <meta key="og:title" property="og:title" content={"ShoeShop"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Ad ullamcorper eros nibh pharetra vulputate imperdiet consectetur vestibulum at ac posuere volutpat maecenas gravida dictum suscipit habitasse class scelerisque fermentum blandit mi a."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <section className={classNames(projectcss.all, sty.section__ocf)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container3"}
              data-plasmic-override={overrides.container3}
              hasGap={true}
              className={classNames(projectcss.all, sty.container3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__y2Hsf)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mg75T)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {"New collection!"}
                  </h1>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rsilf
                    )}
                  >
                    {
                      "A nam quisque orci ut vestibulum eget sem aliquet a dictumst condimentum ad quam porta a inceptos consectetur sagittis a a commodo ridiculus tempor egestas."
                    }
                  </div>
                </p.Stack>

                <Button
                  className={classNames("__wab_instance", sty.button___7DYtJ)}
                  colors={"black" as const}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__i5PHk)}
                      role={"img"}
                    />
                  }
                  link={"/category" as const}
                  rounded={true}
                  showEndIcon={true}
                  size={"large" as const}
                >
                  {"Shop"}
                </Button>
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__hBhLt)}>
            <div
              data-plasmic-name={"container4"}
              data-plasmic-override={overrides.container4}
              className={classNames(projectcss.all, sty.container4)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__qKNtk)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gEjEd
                  )}
                >
                  {"Featured"}
                </div>

                <Button
                  className={classNames("__wab_instance", sty.button___3LL31)}
                  colors={"link" as const}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__er25G)}
                      role={"img"}
                    />
                  }
                  link={"/category" as const}
                  showEndIcon={true}
                >
                  {"See more"}
                </Button>
              </div>
            </div>

            {true ? (
              <div
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                className={classNames(projectcss.all, sty.container)}
              >
                <ProductCollection
                  category={"626c0a6465d64c00122ec197" as const}
                  className={classNames(
                    "__wab_instance",
                    sty.productCollection__hGpd
                  )}
                  emptyMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4NWyr
                      )}
                    >
                      {"No product found!"}
                    </div>
                  }
                  loadingMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ve9N
                      )}
                    >
                      {"Loading..."}
                    </div>
                  }
                >
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__brwfq
                    )}
                  />
                </ProductCollection>
              </div>
            ) : null}
          </section>

          <section className={classNames(projectcss.all, sty.section___0MySy)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7Zii0)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kpZvo)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pkkhl)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mOqUi
                    )}
                  >
                    {"Our best shoe sale of the year"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8NMvN
                    )}
                  >
                    {
                      "Signature style. Unsurpassed quality and comfort. Now’s the perfect time to save on iconic shoes."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xu1Ar)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ymV3H
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"3 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"for"}
                      </span>
                      <React.Fragment>{" $169"}</React.Fragment>
                    </React.Fragment>
                  </div>

                  <Button
                    colors={"black" as const}
                    endIcon={
                      <RightArrowIcon
                        className={classNames(projectcss.all, sty.svg__qE647)}
                        role={"img"}
                      />
                    }
                    link={"/category" as const}
                    rounded={true}
                    showEndIcon={true}
                    size={"large" as const}
                  >
                    {"Shop sale"}
                  </Button>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>

          <EmojiValueProps
            data-plasmic-name={"emojiValueProps"}
            data-plasmic-override={overrides.emojiValueProps}
            className={classNames("__wab_instance", sty.emojiValueProps)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__x74Gp)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lFyZp
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__taJxF)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value___4JRco)}
                  icon={
                    <PlaneIcon
                      className={classNames(projectcss.all, sty.svg__o2GVc)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jGDh
                    )}
                  >
                    {"Worldwide shipping"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lpIG
                    )}
                  >
                    {"Special financing and earn rewards."}
                  </div>
                </Value>
              </div>

              <div className={classNames(projectcss.all, sty.column__xwDee)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___7O8Cg
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__lI5Hb)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__vp3Cw)}
                  icon={
                    <DocumentIcon
                      className={classNames(projectcss.all, sty.svg__ciQrV)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2MlCw
                    )}
                  >
                    {"30-day guarantee"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dg4S
                    )}
                  >
                    {"Free return policy."}
                  </div>
                </Value>
              </div>

              <div className={classNames(projectcss.all, sty.column__fyty6)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ztyIh
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__raDko)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__kx2Wb)}
                  icon={
                    <LockIcon
                      className={classNames(projectcss.all, sty.svg__hGUux)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uiWen
                    )}
                  >
                    {"Secured payments"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xj3Xc
                    )}
                  >
                    {"We accept major credit cards."}
                  </div>
                </Value>
              </div>
            </p.Stack>
          </EmojiValueProps>

          <section className={classNames(projectcss.all, sty.section___3FsQy)}>
            <div
              data-plasmic-name={"container42"}
              data-plasmic-override={overrides.container42}
              className={classNames(projectcss.all, sty.container42)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6HBi9)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mtFq7
                      )}
                    >
                      {"Just added"}
                    </div>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__i7Kax
                      )}
                      colors={"link" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__wm6E)}
                          role={"img"}
                        />
                      }
                      link={"/category" as const}
                      showEndIcon={true}
                    >
                      {"See more"}
                    </Button>
                  </div>
                ),

                value: args.container42
              })}
            </div>

            <ProductCollection
              category={"626c0a6465d64c00122ec197" as const}
              className={classNames(
                "__wab_instance",
                sty.productCollection___6D2Yh
              )}
              emptyMessage={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__l61Vv
                  )}
                >
                  {"No product found!"}
                </div>
              }
              loadingMessage={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cp6On
                  )}
                >
                  {"Loading..."}
                </div>
              }
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox___4CsK)}>
                  <ProductCard
                    className={classNames(
                      "__wab_instance",
                      sty.productCard__bmCwq
                    )}
                  />
                </div>
              ) : null}
            </ProductCollection>
          </section>

          <section className={classNames(projectcss.all, sty.section__sd1Y)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container6"}
              data-plasmic-override={overrides.container6}
              hasGap={true}
              className={classNames(projectcss.all, sty.container6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gOrTc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bBVuV
                  )}
                >
                  {"Categories"}
                </div>

                <Button
                  className={classNames("__wab_instance", sty.button__chAhc)}
                  states={"active" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aMlxh
                    )}
                  >
                    {"All"}
                  </div>
                </Button>

                <CategoryCollection
                  data-plasmic-name={"categoryCollection"}
                  data-plasmic-override={overrides.categoryCollection}
                  className={classNames(
                    "__wab_instance",
                    sty.categoryCollection
                  )}
                  emptyMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d74Gt
                      )}
                    >
                      {"No collection found!"}
                    </div>
                  }
                  loadingMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rj8En
                      )}
                    >
                      {"Loading..."}
                    </div>
                  }
                >
                  <Button
                    className={classNames("__wab_instance", sty.button___3HhlG)}
                  >
                    <CategoryField
                      data-plasmic-name={"categoryField"}
                      data-plasmic-override={overrides.categoryField}
                      className={classNames(
                        "__wab_instance",
                        sty.categoryField
                      )}
                      field={"name" as const}
                    />
                  </Button>
                </CategoryCollection>
              </p.Stack>

              <ProductCollection
                className={classNames(
                  "__wab_instance",
                  sty.productCollection__wCJ
                )}
                count={16 as const}
                emptyMessage={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bVukt
                    )}
                  >
                    {"No product found!"}
                  </div>
                }
                loadingMessage={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xd0LC
                    )}
                  >
                    {"Loading..."}
                  </div>
                }
                sort={"price-asc" as const}
              >
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__uXaXv
                  )}
                  small={true}
                />
              </ProductCollection>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__r6Jil)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container434"}
              data-plasmic-override={overrides.container434}
              hasGap={true}
              className={classNames(projectcss.all, sty.container434)}
            >
              <Value
                center={true}
                children2={
                  <Button
                    className={classNames("__wab_instance", sty.button__kwVij)}
                    colors={"black" as const}
                    endIcon={
                      <RightArrowIcon
                        className={classNames(projectcss.all, sty.svg__tuMYx)}
                        role={"img"}
                      />
                    }
                    rounded={true}
                    showEndIcon={true}
                  >
                    {"Read our letter"}
                  </Button>
                }
                className={classNames("__wab_instance", sty.value__jcrJh)}
                icon={
                  <SpeakerphoneIcon
                    className={classNames(projectcss.all, sty.svg__cUhAa)}
                    role={"img"}
                  />
                }
                topBottom={true}
                withButton={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dEdNu
                  )}
                >
                  {"Our goals"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__evcd5
                  )}
                >
                  {"We’re learning how to become a new kind of company."}
                </div>
              </Value>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__k8Pyn)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container433"}
              data-plasmic-override={overrides.container433}
              hasGap={true}
              className={classNames(projectcss.all, sty.container433)}
            >
              <div className={classNames(projectcss.all, sty.column__c5EKs)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__rkU2Q
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__tbbNa)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__jxvCu)}
                  icon={
                    <MedalIcon
                      className={classNames(projectcss.all, sty.svg__tGdvx)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Z2Zh
                    )}
                  >
                    {"We guarantee everything we sell."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__prn1X
                    )}
                  >
                    {
                      "Ad fringilla ut nisi in hendrerit malesuada nascetur a in ridiculus."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__kKva4)}
                    colors={"link" as const}
                  >
                    {"View guarantee"}
                  </Button>
                </Value>
              </div>

              <div className={classNames(projectcss.all, sty.column__ypps)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__mOYt8
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__kq5Sj)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__qgKdI)}
                  icon={
                    <LeafIcon
                      className={classNames(projectcss.all, sty.svg__zUr5Z)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vwFcE
                    )}
                  >
                    {"Know how your shoes are made."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gH2H
                    )}
                  >
                    {
                      "Parturient blandit viverra blandit sem suspendisse himenaeos."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__nJfvs)}
                    colors={"link" as const}
                  >
                    {"About the supply chain"}
                  </Button>
                </Value>
              </div>

              <div className={classNames(projectcss.all, sty.column__xpAsp)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___0N6Fi
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__rixoT)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__kmMtO)}
                  icon={
                    <ShoeIcon
                      className={classNames(projectcss.all, sty.svg___7Yx28)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ehum
                    )}
                  >
                    {"Keep your shoes in play."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5KDn1
                    )}
                  >
                    {
                      "Adipiscing ornare dui tellus nam nibh cum a torquent maecenas."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__wfiAy)}
                    colors={"link" as const}
                  >
                    {"Keep your shoes in play"}
                  </Button>
                </Value>
              </div>

              <div className={classNames(projectcss.all, sty.column__ai9Uq)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__t4Uau
                      )}
                      colors={"black" as const}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4UeEz
                          )}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large" as const}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__x8A4H)}
                  icon={
                    <PeaceIcon
                      className={classNames(projectcss.all, sty.svg__jdtT)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e19I3
                    )}
                  >
                    {"We give back for every sale."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e3UmG
                    )}
                  >
                    {
                      "Parturient vestibulum ut a dui parturient habitant netus integer ipsum."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__qHqXw)}
                    colors={"link" as const}
                  >
                    {"Give back for every sale"}
                  </Button>
                </Value>
              </div>
            </p.Stack>
          </section>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "container3",
    "h1",
    "container4",
    "container",
    "emojiValueProps",
    "columns",
    "container42",
    "container6",
    "categoryCollection",
    "categoryField",
    "container434",
    "container433",
    "footer"
  ],
  navBar: ["navBar"],
  container3: ["container3", "h1"],
  h1: ["h1"],
  container4: ["container4"],
  container: ["container"],
  emojiValueProps: ["emojiValueProps", "columns"],
  columns: ["columns"],
  container42: ["container42"],
  container6: ["container6", "categoryCollection", "categoryField"],
  categoryCollection: ["categoryCollection", "categoryField"],
  categoryField: ["categoryField"],
  container434: ["container434"],
  container433: ["container433"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navBar: typeof NavBar;
  container3: "div";
  h1: "h1";
  container4: "div";
  container: "div";
  emojiValueProps: typeof EmojiValueProps;
  columns: "div";
  container42: "div";
  container6: "div";
  categoryCollection: typeof CategoryCollection;
  categoryField: typeof CategoryField;
  container434: "div";
  container433: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    container3: makeNodeComponent("container3"),
    h1: makeNodeComponent("h1"),
    container4: makeNodeComponent("container4"),
    container: makeNodeComponent("container"),
    emojiValueProps: makeNodeComponent("emojiValueProps"),
    columns: makeNodeComponent("columns"),
    container42: makeNodeComponent("container42"),
    container6: makeNodeComponent("container6"),
    categoryCollection: makeNodeComponent("categoryCollection"),
    categoryField: makeNodeComponent("categoryField"),
    container434: makeNodeComponent("container434"),
    container433: makeNodeComponent("container433"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
